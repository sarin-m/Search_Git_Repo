html.dark
  head
    link(rel="stylesheet" type="text/css" href="/stylesheets/style.css")
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js")
    link(rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css")
    script(src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js")
    script(src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.all.min.js")
    title RepoFinder
  body
    .wrapper
      .container
        h1 RepoFinder
        .search-form    
          img.coding-image(src='/images/unnamed.png')
          input.search-input(type='text', placeholder='Enter search query')
          button.search-button(type='submit') Search
      .tableSection 
        table#repoResultsTable
          thead.table-heading
            tr 
              th SNO
              th Name 
              th Repository URL 
              th Description 
              th Languages_Used
          tbody
  script.
    $(document).ready(function() {
      // Hide the repoResultsTable initially
      $('.tableSection').hide();
      $('.search-input').keypress( (event) => {
        // Check if the Enter key is pressed (key code 13)
        if (event.which === 13) {
          $('.search-button').click(); // Simulate button click event
        }
      });

      // Handle search button click event
      $('.search-button').on('click', () => {
        $('.tableSection').hide();
        // Get the search query from the input field
        const searchQuery = $('.search-input').val();
        if(!searchQuery) {
          Swal.fire({
            title: "Error!",
            text: "Please enter a search query",
            icon: "error",
          });
          return;
        }

        // Show loading state with SweetAlert
        Swal.fire({
          title: "Loading",
          text: "Please wait while we process your request...",
          showCancelButton: false,
          showConfirmButton: false,
        });



        // Make a POST request to the search/repo endpoint
        $.post('search/repo', {searchQuery}, (result) => {
          // Close the loading state SweetAlert
          Swal.close();

          // Handle the result
          if (result && result.data && result.data.length === 0) {
            // Show an error message with SweetAlert if no data is found
            Swal.fire({
              title: "Error!",
              text: result.status,
              icon: "error",
            });
            return;
          }

          // Show the repoResultsTable
          $('.tableSection').show();

          // Process the result data
          result = result.data;
          let str = '';
          for(let i = 0; i < result.length; i += 1) {
            // Build the table rows with result data
            str += `<tr class='table-row'><td>${i}</td><td>${result[i].name}</td><td><a href=${result[i].url}>${result[i].url}</a></td><td>${result[i].description}</td><td>${result[i].language}</td></tr>`;
          }
          // Append the built rows to the repoResultsTable tbody
          $('#repoResultsTable tbody').append(str);

          // Initialize DataTable on the repoResultsTable
          $('#repoResultsTable').DataTable();
        }).fail((jqXHR, textStatus, errorThrown) => {
          console.log('jqXHR....',jqXHR);
          console.log('textStatus....',textStatus)
          console.log('errorThrown....',errorThrown)
          // Handle error response
          $('.tableSection').hide();

          // Close the loading state SweetAlert
          Swal.close();

          // Show an error message with SweetAlert for server error
          Swal.fire({
            title: "Error!",
            text: jqXHR.responseJSON.status,
            icon: "error",
          });
        });
      });
    });
    